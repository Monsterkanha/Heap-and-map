class Solution {
public:
    int minRefuelStops(int target, int startFuel, vector<vector<int>>& stations) {
        int refil = 0, i = 0, n = stations.size();
        int dist = 0;
        priority_queue<int> pq;
        while(startFuel < target){
            while(i < n && startFuel >= stations[i][0]){
                pq.push(stations[i][1]);
                i++;
            }
            if(!pq.size()) return -1;
            startFuel += pq.top();
            pq.pop();
            refil++;
        }
        return refil;
    }
};

1. Go as far as you can go and meantime we can add the intermediate station. If we get to refil there we can their fuel extra to our dist.

